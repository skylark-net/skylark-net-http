{"version":3,"sources":["xhr.js"],"names":["define","skylark","types","objects","arrays","funcs","Deferred","Evented","isCrossOrigin","http","each","mixin","noop","isArray","isFunction","isPlainObject","type","getAbsoluteUrl","a","url","document","createElement","href","Xhr","jsonpID","key","name","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","async","beforeSend","success","error","complete","context","global","accepts","script","json","xml","html","text","crossDomain","timeout","processData","cache","traditional","xhrFields","withCredentials","mimeToDataType","mime","split","test","appendQuery","query","replace","serializeData","options","data","param","toUpperCase","undefined","serialize","params","obj","scope","t","array","hash","value","add","this","push","encodeURIComponent","join","inherit","klassName","_request","args","_","self","xhr","XMLHttpRequest","dataType","call","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","indexOf","overrideMimeType","responseType","finish","onloadend","onabort","onprogress","ontimeout","result","status","startsWith","getResponseHeader","eval","responseText","responseXML","JSON","parse","response","e","reject","resolve","Error","statusText","evt","notify","open","toLowerCase","setRequestHeader","send","promise","abort","request","get","post","patch","put","del","init","forEach","defaultOptions"],"mappings":"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","file":"../xhr.js","sourcesContent":["define([\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/deferred\",\r\n  \"skylark-langx-emitter/evented\",\r\n  \"skylark-langx-urls/is-cross-origin\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,isCrossOrigin,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: false,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            traditional : false,\r\n            \r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                if (type(options.data) != \"string\") {\r\n                    options.data = param(options.data, options.traditional);\r\n                }\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n        \r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = options.contentType || (isFormData ? false : 'application/x-www-form-urlencoded');\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                if (dataType == \"blob\" || dataType == \"arraybuffer\") {\r\n                    xhr.responseType = dataType;\r\n                }\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        //result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(xhr.responseText);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(xhr.responseText) ? null : JSON.parse(xhr.responseText);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = xhr.response; // new Blob([xhr.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.response;\r\n                            } else {\r\n                                //if (dataType == \"text\" || dataType==\"html\")\r\n                                result = xhr.responseText;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n                \r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = value;\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    if (!isCrossOrigin(url)) {// for s02\r\n                      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); \r\n                    }\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n    return http.Xhr = Xhr;  \r\n});"]}